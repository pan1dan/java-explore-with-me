{
	"info": {
		"_postman_id": "c711f931-fa88-4603-b558-f32aaf8d83be",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34733694"
	},
	"item": [
		{
			"name": "Main_functions",
			"item": [
				{
					"name": "Добавление нового пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Patti Waters I\",\r\n    \"email\":\"Julie.Wyman99@hotmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление новой категории",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Category1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response schema for expected fields and data types\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.id).to.be.a('number');\r",
									"  pm.expect(responseData.createdOn).to.be.a('string');\r",
									"  pm.expect(responseData.eventDate).to.be.a('string');\r",
									"  pm.expect(responseData.location).to.be.an('object');\r",
									"  pm.expect(responseData.location.lat).to.be.a('number');\r",
									"  pm.expect(responseData.location.lon).to.be.a('number');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\":\"Tempora molestiae animi molestiae quos id sunt assumenda. Deserunt dicta pariatur suscipit unde voluptas. Eveniet quia doloribus ut. Omnis quas aut sit voluptas quisquam. Mollitia recusandae ut aut qui non reprehenderit et aut. Optio consectetur optio sit nisi.\",\r\n    \"category\":123,\r\n    \"description\":\"Animi consequatursoluta. Impedit aspernatur recusandae minima blanditiis magni ut est aut velit. Autem recusandae praesentium in consequatur. Quidem tempora fuga suscipit.\\n \\rPariatur dolores vero nemo repellat repellendus dolor eveniet ad quos. Voluptas sunt et. Corporis est molestias quia dolor sit voluptatem quia.\\n \\rVoluptatem est aperiam. Nesciunt eos ipsam asperiores sit nisi. Quia reiciendis tenetur est veniam natus quo. Aut ratione sunt repudiandae voluptatem facilis natus possimus eum voluptatibus. Voluptate odit culpa dolor vel eligendi nemo.\",\r\n    \"eventDate\":\"2024-12-12 00:27:59\",\r\n    \"location\":\r\n    {\r\n        \"lat\":-46.2607,\r\n        \"lon\":-2.4664\r\n    }\r\n    ,\"paid\":\"true\",\r\n    \"participantLimit\":\"150\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"Est quisquam est rerum earum quae qui similique velit.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/events",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Подтверждение события админом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stateAction\":\"PUBLISH_EVENT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/admin/events/138",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"events",
								"138"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test to check the response content type\r",
									"pm.test(\"Response content type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"// Test to check the response status code\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var responseJSON = pm.response.json();\r",
									"\r",
									"// Test for the existence of specific fields\r",
									"pm.test(\"Response body contains the required fields\", function () {\r",
									"    pm.expect(responseJSON).to.have.property('id');\r",
									"    pm.expect(responseJSON).to.have.property('event');\r",
									"    pm.expect(responseJSON).to.have.property('text');\r",
									"    pm.expect(responseJSON).to.have.property('commentator');\r",
									"    pm.expect(responseJSON).to.have.property('createdOn');\r",
									"}); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\":\"123456789123456787878787878788\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/events/107/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"events",
								"107",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение комментария по его id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test to check the response content type\r",
									"pm.test(\"Response content type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"// Test to check the response status code\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var responseJSON = pm.response.json();\r",
									"\r",
									"// Test for the existence of specific fields\r",
									"pm.test(\"Response body contains the required fields\", function () {\r",
									"    pm.expect(responseJSON).to.have.property('id');\r",
									"    pm.expect(responseJSON).to.have.property('event');\r",
									"    pm.expect(responseJSON).to.have.property('text');\r",
									"    pm.expect(responseJSON).to.have.property('commentator');\r",
									"    pm.expect(responseJSON).to.have.property('createdOn');\r",
									"}); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Обновление комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.id).to.be.a('number');\r",
									"    pm.expect(responseData.event).to.be.an('object');\r",
									"    pm.expect(responseData.text).to.be.a('string');\r",
									"    pm.expect(responseData.commentator).to.be.an('object');\r",
									"    pm.expect(responseData.createdOn).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"Text field in the response equals 'this message should be displayed after the text field is updated'\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.text).to.equal('this message should be displayed after the text field is updated');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\":\"this message should be displayed after the text field is updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/events/107/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"events",
								"107",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление второго комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test to check the response content type\r",
									"pm.test(\"Response content type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"// Test to check the response status code\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"var responseJSON = pm.response.json();\r",
									"\r",
									"// Test for the existence of specific fields\r",
									"pm.test(\"Response body contains the required fields\", function () {\r",
									"    pm.expect(responseJSON).to.have.property('id');\r",
									"    pm.expect(responseJSON).to.have.property('event');\r",
									"    pm.expect(responseJSON).to.have.property('text');\r",
									"    pm.expect(responseJSON).to.have.property('commentator');\r",
									"    pm.expect(responseJSON).to.have.property('createdOn');\r",
									"}); "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\":\"it will say here that this is the second comment234324\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/138/events/107/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"events",
								"107",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение всех комментариев события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"// Test to check for the number of received elements in the response\r",
									"pm.test(\"Number of received elements is greater than zero\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array').and.to.have.length.greaterThan(0);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/107",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"107"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение всех комментариев пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"// Test to check if the response returns a list of two elements\r",
									"pm.test(\"Response returns a list of two elements\", function () {\r",
									"  pm.expect(pm.response.json()).to.be.an('array').with.lengthOf(2);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/users/138/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users",
								"138",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария пользователем",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 204\", function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/138/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"138",
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария администратором",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 204\", function () {\r",
									"  pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/users/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"users",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение комментариев после их удаления",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response body returns an empty list\", function () {\r",
									"    var responseBody = pm.response.json();\r",
									"    pm.expect(responseBody).to.be.an('array').that.is.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/107",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"107"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation",
			"item": [
				{
					"name": "users_endpoints",
					"item": [
						{
							"name": "Запрос с отрицательным userId в пути",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"234893289823854389058934895894351\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/-2/events/2/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"-2",
										"events",
										"2",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос с отрицательным eventId в пути",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"234893289823854389058934895894351\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/2/events/-22/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"2",
										"events",
										"-22",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление нового комментария c несуществующим пользователем и несуществующим событием",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function(){\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"132423423423423423423423423423423\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/2000/events/2000/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"2000",
										"events",
										"2000",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление нового пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function(){\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"Patti Waters II\",\r\n    \"email\":\"Julie.WymanII99@hotmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/admin/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление нового комментария c несуществующим событием",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function(){\r",
											"    pm.response.to.be.notFound;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"132423423423423423423423423423423\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/139/events/3723/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"139",
										"events",
										"3723",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление новой категории",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function(){\r",
											"    pm.expect(pm.response.code).to.equal(201);\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"Category2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/admin/categories",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление нового события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Response schema for expected fields and data types\", function () {\r",
											"  const responseData = pm.response.json();\r",
											"  \r",
											"  pm.expect(responseData).to.be.an('object');\r",
											"  pm.expect(responseData.id).to.be.a('number');\r",
											"  pm.expect(responseData.createdOn).to.be.a('string');\r",
											"  pm.expect(responseData.eventDate).to.be.a('string');\r",
											"  pm.expect(responseData.location).to.be.an('object');\r",
											"  pm.expect(responseData.location.lat).to.be.a('number');\r",
											"  pm.expect(responseData.location.lon).to.be.a('number');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\":\"sdfsdfsdfsdfsdf molestiae animi molestiae quos id sunt assumenda. Deserunt dicta pariatur suscipit unde voluptas. Eveniet quia doloribus ut. Omnis quas aut sit voluptas quisquam. Mollitia recusandae ut aut qui non reprehenderit et aut. Optio consectetur optio sit nisi.\",\r\n    \"category\":124,\r\n    \"description\":\"Animi consequatursoluta. Impedit aspernatur recusandae minima blanditiis magni ut est aut velit. Autem recusandae praesentium in consequatur. Quidem tempora fuga suscipit.\\n \\rPariatur dolores vero nemo repellat repellendus dolor eveniet ad quos. Voluptas sunt et. Corporis est molestias quia dolor sit voluptatem quia.\\n \\rVoluptatem est aperiam. Nesciunt eos ipsam asperiores sit nisi. Quia reiciendis tenetur est veniam natus quo. Aut ratione sunt repudiandae voluptatem facilis natus possimus eum voluptatibus. Voluptate odit culpa dolor vel eligendi nemo.\",\r\n    \"eventDate\":\"2024-12-24 00:27:59\",\r\n    \"location\":\r\n    {\r\n        \"lat\":-123.2607,\r\n        \"lon\":-31132.4664\r\n    }\r\n    ,\"paid\":\"true\",\r\n    \"participantLimit\":\"150\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"23423dffd quisquam est rerum earum quae qui similique velit.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/2/events",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"2",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавление комментария для неопубликованного события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 409\", function () {\r",
											"  pm.response.to.have.status(409);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"3784563478574385723457238457345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/139/events/108/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"139",
										"events",
										"108",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Подтверждение события админом",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"  pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"stateAction\":\"PUBLISH_EVENT\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/admin/events/108",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"events",
										"108"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавления комментария",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test to check the response content type\r",
											"pm.test(\"Response content type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
											"});\r",
											"// Test to check the response status code\r",
											"pm.test(\"Response status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var responseJSON = pm.response.json();\r",
											"\r",
											"// Test for the existence of specific fields\r",
											"pm.test(\"Response body contains the required fields\", function () {\r",
											"    pm.expect(responseJSON).to.have.property('id');\r",
											"    pm.expect(responseJSON).to.have.property('event');\r",
											"    pm.expect(responseJSON).to.have.property('text');\r",
											"    pm.expect(responseJSON).to.have.property('commentator');\r",
											"    pm.expect(responseJSON).to.have.property('createdOn');\r",
											"}); "
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"rtgtrh5thgtgrhrtyhtghtghtgh1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/139/events/108/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"139",
										"events",
										"108",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Добавления комментария с неправильным размером text",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\": \"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/139/events/108/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"139",
										"events",
										"108",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление комментария с неправильным размером text",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\":\"1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/139/events/108/comments/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"139",
										"events",
										"108",
										"comments",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Обновление  несуществующего комментария",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"text\":\"1231234124312313123123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/users/139/events/108/comments/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"139",
										"events",
										"108",
										"comments",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление несуществующего комментария",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 404\", function () {\r",
											"  pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/139/comments/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"139",
										"comments",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление комментария другим пользователем, не создателем",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/138/comments/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"138",
										"comments",
										"3"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "admin_endpoints",
					"item": [
						{
							"name": "Получение комментариев несуществующего пользователя",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/admin/users/3123/comments",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"users",
										"3123",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение комментариев с отрицательным from",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/admin/users/140/comments?size=-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"users",
										"140",
										"comments"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение комментариев с отрицательным size",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/admin/users/140/comments?size=-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"users",
										"140",
										"comments"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление несуществующего комментария админом",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/admin/users/comments/4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"admin",
										"users",
										"comments",
										"4"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comment_endpoints",
					"item": [
						{
							"name": "Получение комментариев несуществующего события",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments/events/3265",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments",
										"events",
										"3265"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение комментариев с отрицательным eventId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments/events/-4",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments",
										"events",
										"-4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение комментариев с отрицательным from",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments/events/108?from=-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments",
										"events",
										"108"
									],
									"query": [
										{
											"key": "from",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение комментариев с отрицательным size",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments/events/108?size=-1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments",
										"events",
										"108"
									],
									"query": [
										{
											"key": "size",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение несуществующего комментария",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments/5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение комментария с отрицательным commentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/comments/-5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"comments",
										"-5"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}